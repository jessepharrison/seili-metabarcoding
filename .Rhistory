pryr::object_size(mydata2)
mydata2 <- mydata
mydata2 <- cbind(mydata, mydata2)
pryr::object_size(mydata2) # 42.8 MB
mydata3 <- mydata[1]
mydata3 <- mydata[,1]
head(mydata3)
pryr::object_size(mydata3)
mydata3 <- data.frame(newcol = c(t(mydata)), stringsAsFactors=FALSE)
pryr::object_size(mydata3)
rm(mydata3)
mydata3 <- tidyr::unite(mydata)
mydata3 <- data.frame(newcol = c(t(mydata)))
rm(mydata3)
mydata3 <- tidyr::gather(mydata)
dim(mydata)
mydata3 <- data.frame(x = unlist(mydata))
head(mydata)
mydata3 <- stack(mydata)[1]
mydata3 <- as.character(stack(mydata)[1])
dim(mydata3)
rm(mydata3)
mydata3 <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv", sep = FALSE)
mydata3 <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv", sep = NULL)
head(mydata3)
pryr::object_size(mydata3)
str(mydata2)
rm(list=ls())
mydata <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv")
dim(mydata) # 253316 rows, 17 columns
pryr::object_size(mydata) # 21.5 MB
mydata2 <- data.frame(x, unlist(mydata))
mydata2 <- data.frame("x", unlist(mydata))
head(mydata2)
mydata2 <- data.frame(unlist(mydata))
head(mydata2)
head(mydata)
mydata2 <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv", sep = ",")
pryr::object_size(mydata2) # 21.5 MB
mydata2 <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv", sep = ";")
pryr::object_size(mydata2)
head(mydata2)
mydata <- data.table::fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv", sep ",")
dim(mydata) # 253316 rows, 17 columns
pryr::object_size(mydata) # 21.5 MB
install.packages("reprex")
install.packages("loggit")
library(cluster)
library(TraMineR)
install.packages("TraMineR")
install.packages("Hmisc")
install.packages("TraMineR")
install.packages("TicToc")
install.packages("tictoc")
library(cluster)
library(TraMineR)
library(tictoc)
data(biofam)
## Building one channel per type of event left, children or married
bf <- as.matrix(biofam[, 10:25])
children <-  bf==4 | bf==5 | bf==6
married <- bf == 2 | bf== 3 | bf==6
left <- bf==1 | bf==3 | bf==5 | bf==6
## Building sequence objects
child.seq <- seqdef(children)
marr.seq <- seqdef(married)
left.seq <- seqdef(left)
## Using transition rates to compute substitution costs on each channel
mcdist <- seqdistmc(channels=list(child.seq, marr.seq, left.seq),
method="OM", sm =list("TRATE", "TRATE", "TRATE"))
## Using a weight of 2 for children channel and specifying substitution-cost
smatrix <- list()
smatrix[[1]] <- seqsubm(child.seq, method="CONSTANT")
smatrix[[2]] <- seqsubm(marr.seq, method="CONSTANT")
smatrix[[3]] <- seqsubm(left.seq, method="TRATE")
mcdist2 <- seqdistmc(channels=list(child.seq, marr.seq, left.seq),
method="OM", sm =smatrix, cweight=c(2,1,1))
# Computes agglomerative hierarchical clustering of the dataset.
tic()
ward_mc <- agnes(mcdist2, diss=TRUE, method="ward")
toc()
install.packages("flashClust")
tic()
flashClust::flashClust(mcdist, method = ward)
toc()
tic()
flashClust::flashClust(mcdist2, method = ward)
toc()
tic()
flashClust::flashClust(mcdist2, method = "ward")
toc()
tic()
flashClust::flashClust(mcdist2, method = "ward.D2")
toc()
cl <- kmeans(mcdist2, 1000, iter.max = 20)
str(mcdist2)
install.packages("fastcluster")
fastcluster::hclust.vector(mcdist2, method = "ward")
tic()
ward_mc <- agnes(mcdist2, diss=TRUE, method="ward")
toc()
tic()
fastcluster::hclust.vector(mcdist2, method = "ward")
toc()
mcdist2
data(votes.repub)
agn1 <- agnes(votes.repub, metric = "manhattan", stand = TRUE)
agn1
plot(agn1)
install.packages("genieclust")
genieclust::gclust(mcdist2)
tic()
genieclust::gclust(mcdist2)
toc()
tic()
test <- genieclust::gclust(mcdist2)
toc()
test
plot(test)
plot(ward_mc)
plot(test)
sessionInfo()
remotes::install_github("albertopessia/drda@devel", force = TRUE)
install.packages("devtools")
install.packages("usethis")
install.packages("devtools")
install.packages("roxygen2")
install.packages("devtools")
remotes::install_github("albertopessia/drda@devel", force = TRUE)
library(drda)
data <- data.frame(
y = c(
1.33247, 0.92844, 0.83133, 0.85937, 0.65816, 1.57471, 0.91199, 0.94208,
1.23818, 1.13466, 0.9641, 0.99347, 1.06009, 1.00814, 1.02401, 1.16768,
0.64734, 1.27722, 1.0498, 0.94723, 1.09521, 1.16793, 1.05917, 0.86514,
1.03405, 0.97345, 1.08475, 1.42686, 0.86831, 1.18445, 0.96432, 1.17698,
1.33832, 1.06965, 0.91873, 1.61137, 1.20967, 1.12732, 1.26277, 0.98449,
0.8448, 1.77046, 0.90366, 1.33943, 1.12403, 0.77396, 1.7221, 0.87106,
1.21629, 0.98583, 1.165, 0.99248, 1.1924, 1.18224, 1.09688, 1.1166,
1.15364, -0.10949, 2.85117, 0.62544, 1.08089, 1.05483, 1.2314, 1.01362,
1.21547, 1.13804, 1.08187, 1.17875, 1.10649, 0.93402, 1.23005, 1.58808,
1.30672, 1.22205, 1.22338, 1.16721, 1.56238, 0.82263, 1.33748, 1.20973,
1.00501, 0.9047, 1.63791, 1.00961, 0.95051, 1.29103, 1.15532, 1.03695,
1.23172, 1.12819, 0.93078, 1.29048, 1.1756, 1.0103, 0.98997, 1.39659,
1.05155, 1.22088, 1.12443, 2.91453, 0.21079, 0.27154, 0.99944, 1.2088,
1.18862, 1.29992, 1.48525, 0.6117, 1.13695, 1.10504, 1.15487, 1.24335,
1.06294, 0.92386, 1.01849, 1.11516, 1.09649, 1.10585, 1.05961, 1.2367,
1.1279, 1.13867, 1.13559, 0.7032, 0.89504, 1.80392, 1.12543, 0.95734,
1.55187, 1.2948, 0.46013, 1.87971, 1.11376, 1.13564, 1.38524, 1.33316,
1.13323, 1.16825, 1.2453, 1.19623, 1.19311, 1.96109, -0.30945, 1.983,
1.0986, 1.23817, 1.29787, 1.27216, 1.43834, 0.92413, 1.21184, 1.27186,
1.15094, 0.76331, 1.4615, 1.00461, 0.93425, 1.01425, 1.28092, 1.10384,
0.97996, 1.5941, 1.19492, 1.28035, 1.20262, 0.84447, 0.83008, 2.00334,
1.06925, 1.02318, 1.00264, 1.02233, 0.81703, 1.25571, 1.013, 0.84136,
1.24072, 1.09306, 1.05127, 0.95074, 1.04941, 1.0268, 1.01886, 0.94986,
0.70887, 1.43634, 1.07934, 0.94565, 1.07009, 0.88262, 1.59085, 0.6216,
1.01688, 0.98162, 1.09657, 1.23771, 0.86516, 1.25335, 0.9603, 0.9203,
1.47563, 0.99005, 1.39569, 1.11916, 1.17728, 1.18036, 1.14726, 0.94288,
1.0454, 1.51662, 1.03082, 1.39625, 1.10365, 1.28102, 0.99441, 1.25528,
1.0194, 1.26011, 1.25122, 1.26124, 1.19121, 1.07826, 1.18011, 1.16496,
1.18564, 2.06786, 0.79964, 0.66321, 1.15028, 1.09479, 1.28565, 1.44924,
1.22911, 0.85237, 1.16418, 1.16171, 1.20483, 1.82831, 1.1614, 1.29545,
1.35216, 1.44483, 1.48816, 1.46052, 1.35496, 1.28518, 1.26119, 1.8107,
1.02876, 1.81653, 0.99279, 1.29135, 1.49577, 1.30279, 1.50387, 1.58427,
1.27193, 1.44623, 1.2103, 1.50298, 1.58914, 1.35545, 1.32044, 1.62654,
1.47182, 1.45114, 1.37946, 0.83812, 0.97605, 2.48825, 1.2402, 1.53952,
1.52271, 1.35613, 1.73113, 1.21517, 1.44002, 1.39209, 1.47032, 1.33531,
1.17556, 2.47421, 1.63281, 1.77547, 1.57681, 0.72456, 1.63442, 1.11101,
1.21336, 0.6423, 1.61433, 1.1125, 1.09931, 1.25818, -0.14996, -0.11074,
1.5477, 0.44733, 0.42276, 0.41691, 0.41988, 0.41373, 0.45339, 0.16432,
0.77539, 0.3473, 0.427, 0.43205, 0.42796, 0.43199, 0.43448, 0.42054,
0.06689, 1.07754, 0.14257, 0.93944, 0.32343, 0.02413, 0.38238, 0.46892,
0.4357, 0.46633, 0.35239, 0.37194, -0.07156, 1.31711, -0.05489, 0.47842,
0.46882, 2.20566, 1.41192, 0.21284, 1.52813, 1.67027, -0.28956, 1.77219,
1.02801, -0.82341, 1.14505, 0.461, 0.44345, 0.4452, 0.47268, 0.43438,
0.44259, 0.43633, 0.45214, 0.46118, 0.18218, 0.18796, 0.97951, 0.44175,
0.45071, 0.45719, 0.82741, -0.33459, 0.85683, 0.45771, 0.44988, 0.44205,
0.72925, -0.14891, 0.76931, 0.30016, 0.30351, 0.29625, 0.52464, -0.0207,
0.39597, 0.40494, 0.39971, 1.46746, 0.57086, 0.62089, 1.08036, 0.07312,
0.04734, 2.15165
),
x = c(
-8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971,
-8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971,
-8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971,
-8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.67971, -8.07894,
-8.07894, -8.07894, -8.07894, -8.07894, -8.07894, -7.98656, -7.98656,
-7.98656, -7.98656, -7.98656, -7.98656, -7.98656, -7.98656, -7.98656,
-7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027,
-7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027,
-7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027,
-7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -7.07027, -6.47597,
-6.47597, -6.47597, -6.47597, -6.47597, -6.47597, -6.37126, -6.37126,
-6.37126, -6.37126, -6.37126, -6.37126, -6.37126, -6.37126, -6.37126,
-5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614,
-5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614,
-5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614,
-5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -5.45614, -4.86914,
-4.86914, -4.86914, -4.86914, -4.86914, -4.86914, -4.76417, -4.76417,
-4.76417, -4.76417, -4.76417, -4.76417, -4.76417, -4.76417, -4.76417,
-3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905,
-3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905,
-3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905,
-3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.84905, -3.25970,
-3.25970, -3.25970, -3.25970, -3.25970, -3.25970, -3.15356, -3.15356,
-3.15356, -3.15356, -3.15356, -3.15356, -3.15356, -3.15356, -3.15356,
-2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493,
-2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493,
-2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493,
-2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -2.23493, -1.65026,
-1.65026, -1.65026, -1.65026, -1.65026, -1.65026, -1.54646, -1.54646,
-1.54646, -1.54646, -1.54646, -1.54646, -1.54646, -1.54646, -1.54646,
-0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923,
-0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923,
-0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923,
-0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.62923, -0.04082,
-0.04082, -0.04082, -0.04082, -0.04082, -0.04082, 0.06766, 0.06766,
0.06766, 0.06766, 0.06766, 0.06766, 0.06766, 0.06766, 0.06766, 0.98208,
0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208,
0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208,
0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208, 0.98208,
0.98208, 0.98208, 1.56862, 1.56862, 1.56862, 1.56862, 1.56862, 1.56862,
1.67335, 1.67335, 1.67335, 1.67335, 1.67335, 1.67335, 1.67335, 1.67335,
1.67335, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776,
2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776,
2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776, 2.58776,
2.58776, 2.58776, 2.58776, 2.58776, 3.17805, 3.17805, 3.17805, 3.17805,
3.17805, 3.17805, 3.28466, 3.28466, 3.28466, 3.28466, 3.28466, 3.28466,
3.28466, 3.28466, 3.28466, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002,
4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002,
4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002, 4.2002,
4.2002, 4.2002, 4.2002, 4.78749, 4.78749, 4.78749, 4.78749, 4.78749,
4.78749, 4.89035, 4.89035, 4.89035, 4.89035, 4.89035, 4.89035, 4.89035,
4.89035, 4.89035
)
)
(fit <- drda(y ~ x, data = data))
sessionInfo()
plot(sunspots)
par(mar = c(4, 4, .1, .2)); plot(sunspots)
capabilities()[["X11"]]
library(tidyverse)
data <- read_csv("/home/jharriso/Desktop/test.csv")
data
library(tidyverse)
data <- read_csv("/home/jharriso/Desktop/test.csv")
ggplot(mydataset, aes(x = Exact,
y = Approx, color = ApproxType)) +
geom_point()
library(tidyverse)
mydataset <- read_csv("/home/jharriso/Desktop/test.csv")
ggplot(mydataset, aes(x = Exact,
y = Approx, color = ApproxType)) +
geom_point()
rm(list=ls())
# additional libpath ####
# (see extra_RPackages.R for extra package installs)
.libPaths(c("/home/jharriso/seili-singularity/rpackages", .libPaths()))
# set libpath
.libPaths(c("/home/jharriso/seili-singularity/rpackages", .libPaths()))
libpath <- .libPaths()[1]
installl.packages("targets", lib = libpath)
install.packages("targets", lib = libpath)
remotes::install_github("ropensci/targets", lib = libpath)
# Seili 16S analysis - jesse harrison 2020-2021
# using seili-r Singularity container (based on seili-r.def)
# additional libpath ####
# (see extra_RPackages.R for extra package installs)
.libPaths(c("/home/jharriso/seili-singularity/rpackages", .libPaths()))
# packages ####
packages <- c("phyloseq", "ggplot2", "vegan", "grid", "gridExtra", "data.table", "plyr", "cowplot",
"RVAideMemoire", "microbiome", "knitr", "RColorBrewer", "Cairo", "multcompView",
"QsRutils", "dplyr", "ggvegan")
lapply(packages, require, character.only = TRUE)
# sessioninfo ####
# R version 4.0.2 (2020-06-22)
# Platform: x86_64-pc-linux-gnu (64-bit)
# Running under: Ubuntu 18.04.5 LTS
# Matrix products: default
# BLAS/LAPACK: /opt/intel/compilers_and_libraries_2020.0.166/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so
# locale:
#  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8
#  [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C
# [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C
# attached base packages:
#  [1] grid      stats     graphics  grDevices utils     datasets  methods   base
# other attached packages:
#  [1] multcompView_0.1-8   Cairo_1.5-12.2       RColorBrewer_1.1-2   knitr_1.30           microbiome_1.12.0    RVAideMemoire_0.9-78
#  [7] cowplot_1.1.0        plyr_1.8.6           data.table_1.13.2    gridExtra_2.3        vegan_2.5-7          lattice_0.20-41
# [13] permute_0.9-5        ggplot2_3.3.2        phyloseq_1.34.0
# loaded via a namespace (and not attached):
#  [1] Rcpp_1.0.5          ape_5.4-1           tidyr_1.1.2         prettyunits_1.1.1   Biostrings_2.58.0   digest_0.6.27
#  [7] foreach_1.5.1       R6_2.5.0            stats4_4.0.2        pillar_1.4.7        zlibbioc_1.36.0     rlang_0.4.9
# [13] progress_1.2.2      rstudioapi_0.13     S4Vectors_0.28.0    Matrix_1.2-18       labeling_0.4.2      splines_4.0.2
# [19] Rtsne_0.15          stringr_1.4.0       igraph_1.2.6        munsell_0.5.0       tinytex_0.27        compiler_4.0.2
# [25] xfun_0.19           pkgconfig_2.0.3     BiocGenerics_0.36.0 multtest_2.46.0     mgcv_1.8-33         biomformat_1.18.0
# [31] tidyselect_1.1.0    tibble_3.0.4        IRanges_2.24.0      codetools_0.2-18    crayon_1.3.4        dplyr_1.0.2
# [37] withr_2.3.0         MASS_7.3-53         rhdf5filters_1.2.0  nlme_3.1-150        jsonlite_1.7.1      gtable_0.3.0
# [43] lifecycle_0.2.0     magrittr_2.0.1      scales_1.1.1        stringi_1.5.3       farver_2.0.3        XVector_0.30.0
# [49] reshape2_1.4.4      ellipsis_0.3.1      generics_0.1.0      vctrs_0.3.5         Rhdf5lib_1.12.0     iterators_1.0.13
# [55] tools_4.0.2         ade4_1.7-16         Biobase_2.50.0      glue_1.4.2          purrr_0.3.4         hms_0.5.3
# [61] parallel_4.0.2      survival_3.2-7      colorspace_2.0-0    rhdf5_2.34.0        cluster_2.1.0
# ggplot2 theme ####
theme_set(theme_classic())
# disable scientific notation
options(scipen=10000)
# working directory ####
setwd("/home/jharriso/git/seili-metabarcoding/")
# load 16S RData ####
load("rdata/Seili16s.RData")
# based on: import_biom("tables_sampledata_export.biom", treefilename="tree_rooted.tree", refseqfilename="otus.fasta")
# rarefaction curve (without rarefying to even depth) ####
Cairo(file = "figures/r_output/FigS1a_16S.tiff",
type = "tiff",
units = "cm",
width = 25,
height = 25,
pointsize = 14,
dpi = 300,
bg= "white")
rarecurve(t(otu_table(rawdata)),
step = 100,
cex.lab = 1.5,
cex.axis = 1.5,
label = FALSE,
xlab = "No. of sequences",
ylab = "OTUs")
dev.off()
# alpha diversity, evenness, Good's coverage (without rarefying to even depth) ####
richness <- estimate_richness(rawdata, measures = c("Observed", "Chao1", "Shannon"))
richness <- cbind(richness, rawdata@sam_data[,1:2]) # add replicate and site
write.csv(richness, "tables/richness_rawdata_16S.csv")
# Good's coverage
psotu2veg <- function(physeq) {
OTU <- otu_table(physeq)
if (taxa_are_rows(OTU)) {
OTU <- t(OTU)
}
return(as(OTU, "matrix"))
}
rawdata.df <- psotu2veg(rawdata)
goods(rawdata.df)
sort(goods(rawdata.df))
s <- goods(rawdata.df)
min(s$goods)
max(s$goods)
rm(list=ls())
# Seili 18S analysis - jesse harrison 2020-2021
# using seili-r Singularity container (based on seili-r.def)
# additional libpath ####
# (see extra_RPackages.R for extra package installs)
.libPaths(c("/home/jharriso/seili-singularity/rpackages", .libPaths()))
# packages ####
packages <- c("phyloseq", "ggplot2", "vegan", "grid", "gridExtra", "data.table", "plyr", "cowplot",
"RVAideMemoire", "microbiome", "knitr", "RColorBrewer", "Cairo", "multcompView",
"QsRutils", "dplyr", "ggvegan")
lapply(packages, require, character.only = TRUE)
# sessioninfo ####
# R version 4.0.2 (2020-06-22)
# Platform: x86_64-pc-linux-gnu (64-bit)
# Running under: Ubuntu 18.04.5 LTS
# Matrix products: default
# BLAS/LAPACK: /opt/intel/compilers_and_libraries_2020.0.166/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so
# locale:
#  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8
#  [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C
# [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C
# attached base packages:
#  [1] grid      stats     graphics  grDevices utils     datasets  methods   base
# other attached packages:
#  [1] multcompView_0.1-8   Cairo_1.5-12.2       RColorBrewer_1.1-2   knitr_1.30           microbiome_1.12.0    RVAideMemoire_0.9-78
#  [7] cowplot_1.1.0        plyr_1.8.6           data.table_1.13.2    gridExtra_2.3        vegan_2.5-7          lattice_0.20-41
# [13] permute_0.9-5        ggplot2_3.3.2        phyloseq_1.34.0
# loaded via a namespace (and not attached):
#  [1] Rcpp_1.0.5          ape_5.4-1           tidyr_1.1.2         prettyunits_1.1.1   Biostrings_2.58.0   digest_0.6.27
#  [7] foreach_1.5.1       R6_2.5.0            stats4_4.0.2        pillar_1.4.7        zlibbioc_1.36.0     rlang_0.4.9
# [13] progress_1.2.2      rstudioapi_0.13     S4Vectors_0.28.0    Matrix_1.2-18       labeling_0.4.2      splines_4.0.2
# [19] Rtsne_0.15          stringr_1.4.0       igraph_1.2.6        munsell_0.5.0       tinytex_0.27        compiler_4.0.2
# [25] xfun_0.19           pkgconfig_2.0.3     BiocGenerics_0.36.0 multtest_2.46.0     mgcv_1.8-33         biomformat_1.18.0
# [31] tidyselect_1.1.0    tibble_3.0.4        IRanges_2.24.0      codetools_0.2-18    crayon_1.3.4        dplyr_1.0.2
# [37] withr_2.3.0         MASS_7.3-53         rhdf5filters_1.2.0  nlme_3.1-150        jsonlite_1.7.1      gtable_0.3.0
# [43] lifecycle_0.2.0     magrittr_2.0.1      scales_1.1.1        stringi_1.5.3       farver_2.0.3        XVector_0.30.0
# [49] reshape2_1.4.4      ellipsis_0.3.1      generics_0.1.0      vctrs_0.3.5         Rhdf5lib_1.12.0     iterators_1.0.13
# [55] tools_4.0.2         ade4_1.7-16         Biobase_2.50.0      glue_1.4.2          purrr_0.3.4         hms_0.5.3
# [61] parallel_4.0.2      survival_3.2-7      colorspace_2.0-0    rhdf5_2.34.0        cluster_2.1.0
# ggplot2 theme ####
theme_set(theme_classic())
# disable scientific notation
options(scipen=10000)
# working directory ####
setwd("/home/jharriso/git/seili-metabarcoding/")
# load 18S RData ####
load("rdata/Seili18s.RData")
# based on: import_biom("tables_sampledata_export.biom", treefilename="tree_rooted.tree", refseqfilename="otus.fasta")
# rarefaction curve (without rarefying to even depth) ####
Cairo(file = "figures/r_output/FigS1b_18S.tiff",
type = "tiff",
units = "cm",
width = 25,
height = 25,
pointsize = 14,
dpi = 300,
bg= "white")
rarecurve(t(otu_table(rawdata)),
step = 100,
cex.lab = 1.5,
cex.axis = 1.5,
label = FALSE,
xlab = "No. of sequences",
ylab = "")
dev.off()
# alpha diversity, evenness, Good's coverage (without rarefying to even depth) ####
richness <- estimate_richness(rawdata, measures = c("Observed", "Chao1", "Shannon"))
richness <- cbind(richness, rawdata@sam_data[,1:2]) # add replicate and site
write.csv(richness, "tables/richness_rawdata_18S.csv")
# Good's coverage
psotu2veg <- function(physeq) {
OTU <- otu_table(physeq)
if (taxa_are_rows(OTU)) {
OTU <- t(OTU)
}
return(as(OTU, "matrix"))
}
rawdata.df <- psotu2veg(rawdata)
goods(rawdata.df)
s <- goods(rawdata.df)
min(s$goods)
max(s$goods)
rm(list=ls())
# Seili 16S analysis - jesse harrison 2020-2021
# using seili-r Singularity container (based on seili-r.def)
# additional libpath ####
# (see extra_RPackages.R for extra package installs)
.libPaths(c("/home/jharriso/seili-singularity/rpackages", .libPaths()))
# packages ####
packages <- c("phyloseq", "ggplot2", "vegan", "grid", "gridExtra", "data.table", "plyr", "cowplot",
"RVAideMemoire", "microbiome", "knitr", "RColorBrewer", "Cairo", "multcompView",
"QsRutils", "dplyr", "ggvegan")
lapply(packages, require, character.only = TRUE)
# sessioninfo ####
# R version 4.0.2 (2020-06-22)
# Platform: x86_64-pc-linux-gnu (64-bit)
# Running under: Ubuntu 18.04.5 LTS
# Matrix products: default
# BLAS/LAPACK: /opt/intel/compilers_and_libraries_2020.0.166/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so
# locale:
#  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8
#  [6] LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C
# [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C
# attached base packages:
#  [1] grid      stats     graphics  grDevices utils     datasets  methods   base
# other attached packages:
#  [1] multcompView_0.1-8   Cairo_1.5-12.2       RColorBrewer_1.1-2   knitr_1.30           microbiome_1.12.0    RVAideMemoire_0.9-78
#  [7] cowplot_1.1.0        plyr_1.8.6           data.table_1.13.2    gridExtra_2.3        vegan_2.5-7          lattice_0.20-41
# [13] permute_0.9-5        ggplot2_3.3.2        phyloseq_1.34.0
# loaded via a namespace (and not attached):
#  [1] Rcpp_1.0.5          ape_5.4-1           tidyr_1.1.2         prettyunits_1.1.1   Biostrings_2.58.0   digest_0.6.27
#  [7] foreach_1.5.1       R6_2.5.0            stats4_4.0.2        pillar_1.4.7        zlibbioc_1.36.0     rlang_0.4.9
# [13] progress_1.2.2      rstudioapi_0.13     S4Vectors_0.28.0    Matrix_1.2-18       labeling_0.4.2      splines_4.0.2
# [19] Rtsne_0.15          stringr_1.4.0       igraph_1.2.6        munsell_0.5.0       tinytex_0.27        compiler_4.0.2
# [25] xfun_0.19           pkgconfig_2.0.3     BiocGenerics_0.36.0 multtest_2.46.0     mgcv_1.8-33         biomformat_1.18.0
# [31] tidyselect_1.1.0    tibble_3.0.4        IRanges_2.24.0      codetools_0.2-18    crayon_1.3.4        dplyr_1.0.2
# [37] withr_2.3.0         MASS_7.3-53         rhdf5filters_1.2.0  nlme_3.1-150        jsonlite_1.7.1      gtable_0.3.0
# [43] lifecycle_0.2.0     magrittr_2.0.1      scales_1.1.1        stringi_1.5.3       farver_2.0.3        XVector_0.30.0
# [49] reshape2_1.4.4      ellipsis_0.3.1      generics_0.1.0      vctrs_0.3.5         Rhdf5lib_1.12.0     iterators_1.0.13
# [55] tools_4.0.2         ade4_1.7-16         Biobase_2.50.0      glue_1.4.2          purrr_0.3.4         hms_0.5.3
# [61] parallel_4.0.2      survival_3.2-7      colorspace_2.0-0    rhdf5_2.34.0        cluster_2.1.0
# ggplot2 theme ####
theme_set(theme_classic())
# disable scientific notation
options(scipen=10000)
# working directory ####
setwd("/home/jharriso/git/seili-metabarcoding/")
# load 16S RData ####
load("rdata/Seili16s.RData")
# based on: import_biom("tables_sampledata_export.biom", treefilename="tree_rooted.tree", refseqfilename="otus.fasta")
# rarefaction curve (without rarefying to even depth) ####
Cairo(file = "figures/r_output/FigS1a_16S.tiff",
type = "tiff",
units = "cm",
width = 25,
height = 25,
pointsize = 14,
dpi = 300,
bg= "white")
rarecurve(t(otu_table(rawdata)),
step = 100,
cex.lab = 1.5,
cex.axis = 1.5,
label = FALSE,
xlab = "No. of sequences",
ylab = "OTUs")
dev.off()
# alpha diversity and Good's coverage (without rarefying to even depth) ####
richness <- estimate_richness(rawdata, measures = c("Observed", "Chao1", "Shannon"))
richness <- cbind(richness, rawdata@sam_data[,1:2]) # add replicate and site
write.csv(richness, "tables/richness_rawdata_16S.csv")
# Good's coverage
psotu2veg <- function(physeq) {
OTU <- otu_table(physeq)
if (taxa_are_rows(OTU)) {
OTU <- t(OTU)
}
return(as(OTU, "matrix"))
}
rawdata.df <- psotu2veg(rawdata)
goods(rawdata.df)
s <- goods(rawdata.df)
min(s$goods)
max(s$goods)
citation("RVAideMemoire")
citation("vegan")
